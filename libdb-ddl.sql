DROP DATABASE IF EXISTS libdb;

CREATE DATABASE libdb;
USE libdb;

CREATE TABLE roles (
	role_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	role VARCHAR(30) NOT NULL UNIQUE,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (role_id)
);

CREATE TABLE users (
	user_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	first_name VARCHAR(30) NOT NULL,
	last_name VARCHAR(30) NOT NULL,
	date_of_birth DATE,
	username VARCHAR(30) NOT NULL UNIQUE,
	password VARCHAR(30) NOT NULL DEFAULT '0000',
	role_id INT UNSIGNED NOT NULL,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (user_id),
	CONSTRAINT fk_user_role FOREIGN KEY (role_id) REFERENCES roles (role_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE schools (
	school_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL UNIQUE,
	address VARCHAR(50),
	city VARCHAR(30),
	telephone INT(10) UNSIGNED,
	email VARCHAR(30),
	director VARCHAR(30),
	operator_id INT UNSIGNED NOT NULL,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY  (school_id),
	CONSTRAINT fk_school_operator FOREIGN KEY (operator_id) REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE school_users (	
	user_id INT UNSIGNED NOT NULL,
	school_id INT UNSIGNED NOT NULL,	
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (user_id,school_id),
	CONSTRAINT fk_school_user_1 FOREIGN KEY (school_id) REFERENCES schools (school_id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_school_user_2 FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE		
);

CREATE TABLE books (
	book_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	title VARCHAR(50) NOT NULL UNIQUE,
	publisher VARCHAR(30),
	isbn VARCHAR(14) UNIQUE,
	pages INT(4) UNSIGNED CHECK(pages>0 AND pages<9999),
	summary VARCHAR(1000),
	total_copies INT(4) UNSIGNED CHECK(total_copies>=0),
	picture VARCHAR(50),
	language VARCHAR(30),
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (book_id)
);

CREATE TABLE school_books (
	school_id INT UNSIGNED NOT NULL,
	book_id INT UNSIGNED NOT NULL,
	copies INT UNSIGNED CHECK(copies>=0),
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (school_id,book_id),
	CONSTRAINT fk_school_book_1 FOREIGN KEY (school_id) REFERENCES schools (school_id) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT fk_school_book_2 FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE	
);

CREATE TABLE authors (
	author_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	author VARCHAR(30) NOT NULL UNIQUE,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (author_id)
);

CREATE TABLE book_authors (
	book_id INT UNSIGNED NOT NULL,
	author_id INT UNSIGNED NOT NULL,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (book_id,author_id),
	CONSTRAINT fk_book_author_1 FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT fk_book_author_2 FOREIGN KEY (author_id) REFERENCES authors (author_id) ON DELETE RESTRICT ON UPDATE CASCADE	
);

CREATE TABLE categories (
	category_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	category VARCHAR(30) NOT NULL UNIQUE,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (category_id)
);

CREATE TABLE book_categories (
	book_id INT UNSIGNED NOT NULL,
	category_id INT UNSIGNED NOT NULL,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (book_id,category_id),
	CONSTRAINT fk_book_categories_1 FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT fk_book_categories_2 FOREIGN KEY (category_id) REFERENCES categories (category_id) ON DELETE RESTRICT ON UPDATE CASCADE	
);

CREATE TABLE keywords (
	keyword_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	keyword VARCHAR(30) NOT NULL UNIQUE,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (keyword_id)	
);

CREATE TABLE book_keywords (
	book_id INT UNSIGNED NOT NULL,
	keyword_id INT UNSIGNED NOT NULL,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(book_id,keyword_id),
	CONSTRAINT fk_book_keyword_1 FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT fk_book_keyword_2 FOREIGN KEY (keyword_id) REFERENCES keywords (keyword_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE loans (
	loan_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	book_id INT UNSIGNED NOT NULL,
	school_id INT UNSIGNED NOT NULL,
	loan_date DATE NOT NULL DEFAULT CAST(CURRENT_TIMESTAMP as DATE),
	returned BIT NOT NULL DEFAULT 0,
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (loan_id),
	CONSTRAINT fk_loan_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE,	
	CONSTRAINT fk_loan_book FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE,	
	CONSTRAINT fk_loan_school FOREIGN KEY (school_id) REFERENCES schools (school_id) ON DELETE RESTRICT ON UPDATE CASCADE	
);

CREATE TABLE reservations (
	reservation_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	book_id INT UNSIGNED NOT NULL,
	school_id INT UNSIGNED NOT NULL,
	reservation_date DATE NOT NULL DEFAULT CAST(CURRENT_TIMESTAMP as DATE),
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (reservation_id),
	CONSTRAINT fk_reservation_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,	
	CONSTRAINT fk_reservation_book FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE,	
	CONSTRAINT fk_reservation_school FOREIGN KEY (school_id) REFERENCES schools (school_id) ON DELETE CASCADE ON UPDATE CASCADE	
);

CREATE TABLE reviews (
	review_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	book_id INT UNSIGNED NOT NULL,
	text VARCHAR(1000),
	likert ENUM('1','2','3','4','5'),
	last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (review_id),
	CONSTRAINT fk_review_user FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT fk_review_book FOREIGN KEY (book_id) REFERENCES books (book_id) ON DELETE RESTRICT ON UPDATE CASCADE	
);
